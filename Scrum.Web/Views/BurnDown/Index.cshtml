@{
    Scrum.Web.Models.ScrumWebContext context = new Scrum.Web.Models.ScrumWebContext();
    ViewBag.Title = "Burndown - ScrumFac";
}
<h1 class="text-center">Sprint BurnDown</h1>
<hr />
<div class="form-group col-lg-12">

    <p class="col-lg-4" id="pIdProjeto">@Html.DropDownList("idProjeto", "-- Selecione Projeto --")</p>

    <p class="col-lg-4 hide" id="pIdSprint">@Html.DropDownList("idSprint", "-- Selecione Sprint --")</p>
    <input type="submit" value="Gerar Burndown" class="btn btn-primary" id="btnGerarBurnDown" />
</div>
<br />

<br />
<div style="width:80%;">
    <div>
        <canvas id="canvas" height="450" width="1000"></canvas>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    $("select").addClass("form-control");
    $('#idProjeto').change(function () {
        //COLOCAR FUNÇAO PARA FILTRAR A SPRINT POR ID DO PROJETO E PREENCHER O DROPDOWN
        //COM AS SPRINTS DO PROJETO ESCOLHIDO
        $('#pIdProjeto').addClass('hide');
        var idProjeto = document.getElementById('idProjeto').value;

        $.ajax({
            url: "/BurnDown/GetSprintProjeto/",
            type: 'GET',
            dataType: 'json',
            data: { idProjeto: idProjeto }           
        });
        
        $('#pIdSprint').removeClass('hide');
    });


    $('#btnGerarBurnDown').click(function () {
        //QUANDO O BOTAO GERAR RELATORIO FOR CLICADO GERAR O RELATORIO DA SPRINT E COLOCAR OS
        //DROPDOWNLIST DEFAULT ATE MESMO OS VALORES
        
        $('#pIdSprint').addClass('hide');
        $('#pIdProjeto').removeClass('hide');
        var id = $('#idSprint').val();

        $.ajax({
            url: "/BurnDown/BuscarSprintId/",
            type: 'GET',
            dataType: 'json',
            data: { idSprint: id },            
            success: function (data) {             
                createBurnDown(data);
            }            
        });

    });

    function createBurnDown(burnDownSprint) {
        var lineChartData = {
            labels: burnDownSprint.Legenda,
            datasets: [
                {
                    label: "Desempenho",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: burnDownSprint.Desempenho
                },
                {
                    label: "Meta Ideal",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(255, 0, 0, 1)",
                    pointColor: "rgba(255, 0, 0, 1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(255, 0, 0, 1)",
                    data: burnDownSprint.Meta

                }
            ]

        };

        var ctx = document.getElementById("canvas").getContext("2d");
        window.myLine = new Chart(ctx).Line(lineChartData, {
            responsive: true
        });
    }
</script>
